SEMICOLON::=";";
ASSIGNMENT::=":=";
SUM_DIF::="+"|"-";
MUL_DIV::="*"|"/";
LEF_PAR::="(";
RIGHT_PAR::=")";
WRITE::="WRITE";
READ::="READ";
IF::="IF";
THEN::="THEN";
ELSE::="ELSE";
REPEAT::="REPEAT";
UNTIL::="UNTIL";
COMPARISON::="=="|"!="|"<"|"<="|">"|">=";
ID::=[a-zA-Z][a-zA-Z0-9]*;
NUMBER::=[0-9]+;

<Program> ::= <Statements> EOF ;
<Statements> ::= <Statement> [<StatementsSuffix>] ;
<Statement> ::= <CallRead> | <CallWrite> | <Assignment> | <IfThen> | <RepeatUntil> ;
<CallWrite> ::= WRITE LEF_PAR ID RIGHT_PAR ;
<CallRead> ::= READ LEF_PAR ID RIGHT_PAR ;
<Assignment> ::= ID ASSIGNMENT <Expression> ;
<Expression> ::= <MulDivExpr> [<ExpressionTail>] ;
<MulDivExpr> ::= <Factor> [<MulDivExprTail>] ;
<Factor> ::= ID | NUMBER | (LEF_PAR <Expression> RIGHT_PAR) ;
<IfThen> ::= IF <Condition> THEN <Statements> [<IfThenSuffix>] ;
<Condition> ::= <Expression> COMPARISON <Expression> ;
<RepeatUntil> ::= REPEAT <Statements> UNTIL <Condition> ;
<MulDivExprTail> ::= MUL_DIV <Factor> [<MulDivExprTail>] ;
<ExpressionTail> ::= SUM_DIF <MulDivExpr> [<ExpressionTail>] ;
<IfThenSuffix> ::= ELSE <Statements> ;
<StatementsSuffix> ::= SEMICOLON <Statements> ;
